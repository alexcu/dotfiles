# Increase the scrollback buffer size
set-option -g history-limit 50000

# Colors
set-option -g status-bg colour235
set-option -g status-fg colour136

# Platform-specific tweaks
if-shell "uname -s | grep -q Darwin" 'set-option -g default-terminal "xterm-256color"'
if-shell "uname -s | grep -q Linux" 'set-option -g default-terminal "screen-256color"'

#
# Prefix Customization
#

# Unbind the default prefix (C-b) and set to C-\
unbind-key C-b
set -g prefix C-\\
# Allow prefix to send itself
bind-key C-\\ send-prefix

#
# Key Bindings
#

# Reload config file using Prefix-l
bind l {
    source-file $HOME/.tmux.conf
    display-message "Config reloaded"
}

# Open command prompt with Prefix-;
bind \; command-prompt

# Clear pane using Prefix-k
bind k send-keys -R

#
# Window Management
#

# Create a new window with Prefix-n and rename it to an empty string
bind n {
    new-window
    rename-window ""
    select-pane -T ""
}

# Create a new window with Prefix-C-t
bind-key -T prefix C-t {
    new-window
    rename-window ""
    select-pane -T ""
}

# Create a new session with Prefix-C-n
bind-key -T prefix C-n {
    command-prompt "new-session -t'%%'"
    rename-window ""
    select-pane -T ""
}

# Rename window with Prefix-C-r
bind-key -T prefix C-r command-prompt "rename-window '%%'"

# Rename pane with Prefix-r
bind r command-prompt -p "(rename-pane)" "select-pane -T '%%'"

# Move pane with Prefix-C-p
bind-key -T prefix C-p command-prompt -p "(move-pane)" "move-pane -t '%%'"

# Rename session with Prefix-,
bind , command-prompt "rename-session '%%'"

#
# Session Navigation
#

# Switch between last/next session using Prefix-Tab
bind Tab {
  if-shell '[ -n "#{client_last_session}" ]' {
    switch-client -l
    display-message "Jumped to previous session (from #{session_name})"
  } {
    switch-client -n
    display-message "Jumped to next session (from #{session_name})"
  }
}

#
# Split Pane Management
#

# Split vertically with Prefix-s and horizontally with Prefix-t
bind s split-pane -v
bind t split-pane -h

# Kill the pane with Prefix-x, Prefix-w, or Prefix-d
bind x kill-pane
bind w kill-pane
bind d kill-pane

# Detach session with Prefix-C-d
bind-key -T prefix C-d confirm -p "(detach?)" detach

# Kill window with Prefix-C-x or Prefix-C-w
bind-key -T prefix C-x kill-window
bind-key -T prefix C-w kill-window

# Copy-mode entry with Prefix-Escape
bind Escape copy-mode

#
# Special Windows and Panes
#

# Switch to "scratch" session or create it if it doesn't exist
bind-key Enter {
  if-shell '[ "#{session_name}" != "scratch" ]' {
    display-message 'Switched to scratch'
    if-shell 'tmux has-session -t scratch 2>/dev/null' \
      'attach-session -t scratch' \
      'new-session -s scratch'
  } {
    display-message 'Already in scratch'
  }
}

# Clear history with Prefix-C-k
bind-key -T prefix C-k confirm -p "(clear history?)" clear-history

# Swap current window to position 1 with Prefix-0
bind 0 {
    swap-window -t 1
    select-window -t 1
}

# Enter copy mode in window using M-PageUp
bind -n M-PageUp copy-mode

#
# Pane Management
#

# Go to previous pane in window with Prefix-\-C-\ (i.e., Prefix-Prefix)
bind-key -T prefix C-\\ last-pane

# Move to nextmost and lastmost pane with Prefix-[ and Prefix-]
bind-key ']' select-pane -t :.+
bind-key '[' select-pane -t :.-

# Swap panes left and right with Prefix-[ or Prefix-]
bind-key '}' swap-pane -U
bind-key '{' swap-pane -D

# Choose session with Prefix-o
bind o choose-session

# Select pane by number with Prefix-p
bind p command-prompt "select-pane -t'%%'"

#
# Keyboard Shortcuts for Window Switching
#

# Jump back to last active window with Prefix-Prefix-\
bind ` last-window

# Switch panes using M-1, M-2, M-3, etc.
bind -n M-1 select-pane -t 1
bind -n M-2 select-pane -t 2
bind -n M-3 select-pane -t 3
bind -n M-4 select-pane -t 4
bind -n M-5 select-pane -t 5
bind -n M-6 select-pane -t 6
bind -n M-7 select-pane -t 7
bind -n M-8 select-pane -t 8
bind -n M-9 select-pane -t 9

#
# Pane Resizing
#

# Minimize/maximize panes with Prefix-- and Prefix-=
bind - {
    resize-pane -y 0
    select-pane -t :.+
}
bind = {
    resize-pane -y "100%"
}

#
# Mouse Interaction
#

# Enable mouse mode
set -g mouse on

# Copy mode with vi-style keybindings
setw -g mode-keys vi

# Automatically copy selection to clipboard on drag
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Automatically copy to clipboard on double-click
bind-key -n MouseDown2Pane run-shell "tmux send-keys -X select-word; tmux send-keys -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'"

#
# Window and Pane Titles
#

# Automatically rename panes and windows based on content
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'

# Start windows and panes from index 1 instead of 0
set -g base-index 1
setw -g pane-base-index 1

# Instant updates to pane/window titles
set-option -g status-interval 1

# Terminal pasting
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

#
# Status Bar & Styling
#

# Pane border styling with titles
set -g pane-border-status top
set -g pane-border-format "#[bg=green fg=black bold] [ #[fg=colour231].#P #[fg=black]#{?pane_title,#{pane_title},#{b:pane_current_path} #[dim]#{pane_current_command} #[default bg=green fg=black bold]} ] "
set -g pane-border-style 'fg=colour240'
set -g pane-active-border-style 'fg=green'

# Make new panes, windows, and sessions blank if not specified
set-hook -g after-split-window 'select-pane -T ""'

# Customize status line appearance
set -g status-position bottom
set -g status-justify left
set -g status-style 'bg=colour240 fg=black bold'

# Customize left and right sections of status bar
set -g status-left ''
set -g status-right '#($HOME/.dotfiles/tmux/status.right.zsh #{pane_current_path})'
set -g status-right-length 200
set -g status-left-length 10

# Customize window status line appearance
setw -g window-status-current-style 'bg=green'
setw -g window-status-current-format ' #[fg=colour231]:#I #[fg=black][#{?window_name,#{window_name},Window #{window_index}}] #[fg=red dim]#F '
setw -g window-status-style 'fg=white dim'
setw -g window-status-format '#[fg=cyan bg=colour242] :#I #[fg=white]#{?window_name,#{window_name},Window #{window_index}} #[fg=red]#F '
setw -g window-status-bell-style 'fg=white bg=red'
set-window-option -g window-status-separator ''

# Customize message styling
set -g message-style 'fg=black bg=yellow'
